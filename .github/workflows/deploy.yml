name: Deploy to Firebase and Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: liff-survey-app-20250809-282a6
  CLOUD_RUN_SERVICE: liff-survey-api
  CLOUD_RUN_REGION: asia-northeast1

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run frontend tests
      working-directory: ./frontend
      run: npm run test:run

    - name: Run backend tests
      working-directory: ./backend
      run: |
        python -m pytest tests/unit/ tests/integration/ -v

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    name: Deploy to Production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Set up Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Configure Docker for Google Cloud
      run: gcloud auth configure-docker

    - name: Deploy to Cloud Run
      working-directory: ./backend
      run: |
        gcloud run deploy ${{ env.CLOUD_RUN_SERVICE }} \
          --source . \
          --platform managed \
          --region ${{ env.CLOUD_RUN_REGION }} \
          --allow-unauthenticated \
          --memory 1Gi \
          --cpu 1 \
          --timeout 300 \
          --quiet

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

    - name: Deploy to Firebase Hosting
      working-directory: ./frontend
      run: |
        # Create temporary service account key file
        echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" > service-account-key.json
        export GOOGLE_APPLICATION_CREDENTIALS="service-account-key.json"
        
        # Deploy using service account authentication
        npm install -g firebase-tools
        firebase deploy --only hosting --non-interactive
        
        # Clean up key file
        rm service-account-key.json

    - name: Display deployment URLs
      run: |
        echo "ðŸš€ Deployment completed successfully!"
        echo "Frontend URL: https://${{ env.PROJECT_ID }}.web.app"
        echo "Backend API: https://${{ env.CLOUD_RUN_SERVICE }}-591749970147.${{ env.CLOUD_RUN_REGION }}.run.app"
